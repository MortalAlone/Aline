<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Alone</title>
  
  <subtitle>下雨天就想睡觉</subtitle>
  <link href="http://localhost:4000/atom.xml" rel="self"/>
  
  <link href="http://localhost:4000/"/>
  <updated>2021-06-06T10:13:14.239Z</updated>
  <id>http://localhost:4000/</id>
  
  <author>
    <name>Alone</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 实用技巧</title>
    <link href="http://localhost:4000/posts/54466/"/>
    <id>http://localhost:4000/posts/54466/</id>
    <published>2021-06-05T14:19:37.000Z</published>
    <updated>2021-06-06T10:13:14.239Z</updated>
    
    <content type="html"><![CDATA[<h2 id="依赖库导入和导出"><a href="#依赖库导入和导出" class="headerlink" title="依赖库导入和导出"></a>依赖库导入和导出</h2><p>Python有它强大的包管理工具——pip，我们可以用pip导出项目中的dependency</p><pre class="language-none"><code class="language-none">pip freeze &gt; requirements.txt</code></pre><p>导入：通过以下命令来安装dependency</p><pre class="language-none"><code class="language-none">pip install -r requirements.txt</code></pre><p><img src="/posts/54466/191.webp" alt="这是代替图片的文字，随便写"></p>]]></content>
    
    
    <summary type="html">依赖库导入和导出
Python有它强大的包管理工具——pip，我们可以用pip导出项目中的dependency

pip freeze &gt; requirements.txt

导入：通过以下命令来安装dependency

pip install -r requirements.txt</summary>
    
    
    
    <category term="技术笔记" scheme="http://localhost:4000/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Python 数据库知识点</title>
    <link href="http://localhost:4000/posts/54467/"/>
    <id>http://localhost:4000/posts/54467/</id>
    <published>2021-06-05T10:05:59.000Z</published>
    <updated>2021-06-28T15:29:19.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL知识点"><a href="#SQL知识点" class="headerlink" title="SQL知识点"></a>SQL知识点</h2><p>Mysql 10个字节相当于10个汉字</p><h1 id="Python-SQLite"><a href="#Python-SQLite" class="headerlink" title="Python - SQLite"></a>Python - SQLite</h1><h2 id="SQLite-语法"><a href="#SQLite-语法" class="headerlink" title="SQLite 语法"></a>SQLite 语法</h2><pre class="language-python" data-language="python"><code class="language-python">execute<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#执行sql语句</span>scroll<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#游标滚动</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭游标</span>executemany<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#执行多条sql语句</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#从结果中取一条记录</span>fetchmany<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#从结果中取多条记录</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#从结果中取出多条记录</span></code></pre><h2 id="SQLite-基本操作"><a href="#SQLite-基本操作" class="headerlink" title="SQLite 基本操作"></a>SQLite 基本操作</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sqlite3conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'test.db'</span><span class="token punctuation">)</span>      <span class="token comment">#如果数据库不存在，那么它就会被创建，最后将返回一个数据库对象</span>c <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">#创建一个游标对象</span>c <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'CREATE TABLE COMPANY (id integer primary key ,name varchar(20),age integer)'</span><span class="token punctuation">)</span>     <span class="token comment">#创建一个数据表</span>data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"1,'leon',22"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'INSERT INTO COMPANY VALUES (%s)'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 插入数据</span>c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'INSERT INTO COMPANY VALUES (?,?,?)'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'name2'</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 插入数据第二种方法</span><span class="token comment"># 还可以使用executemany()执行多条sql语句，使用executmany()比循环使用excute()执行多条sql语句效率高。</span>c<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span><span class="token string">'INSERT INTO COMPANY VALUES (?,?,?)'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'name3'</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'name4'</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'SELECT * FROM COMPANY'</span><span class="token punctuation">)</span>     <span class="token comment">#查询数据</span>res <span class="token operator">=</span> c<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 取全部数据</span>res <span class="token operator">=</span> c<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 取第一条数据</span><span class="token keyword">for</span> line <span class="token keyword">in</span> res<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"循环fetchall的值&gt;&gt;&gt;"</span><span class="token punctuation">,</span>line<span class="token punctuation">)</span>c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'UPDATE COMPANY SET name=? WHERE id=? '</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'cat'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 修改数据</span>c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'DELETE FROM COMPANY WHERE id=1'</span><span class="token punctuation">)</span>                     <span class="token comment"># 删除数据</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"更新的总行数 :"</span><span class="token punctuation">,</span> conn<span class="token punctuation">.</span>total_changes<span class="token punctuation">)</span>                       <span class="token comment"># 结果</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#处理事务提交</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#关闭游标</span></code></pre><h2 id="SQLite-技巧"><a href="#SQLite-技巧" class="headerlink" title="SQLite 技巧"></a>SQLite 技巧</h2><h3 id="连接数据库方法"><a href="#连接数据库方法" class="headerlink" title="连接数据库方法"></a>连接数据库方法</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sqlitetest</span><span class="token punctuation">(</span>txt<span class="token punctuation">,</span>footer<span class="token punctuation">)</span><span class="token punctuation">:</span>    cx <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"D:\Python-Test\StuProject\db.sqlite3"</span><span class="token punctuation">)</span>    cu <span class="token operator">=</span> cx<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    sql <span class="token operator">=</span> <span class="token triple-quoted-string string">'''insert into'comment_comment'(txt,'footer') values (\"%s\",\"%s\");'''</span> <span class="token operator">%</span> <span class="token punctuation">(</span>txt<span class="token punctuation">,</span> footer<span class="token punctuation">)</span>  <span class="token comment"># 字符串插入字符串 sql</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        cu<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        cx<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"D:\Python-Test\StuProject\dblog.txt"</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            log <span class="token operator">=</span> <span class="token triple-quoted-string string">'''执行 sql 发生错误:%s \n 输出:%s'''</span><span class="token operator">%</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>sql<span class="token punctuation">)</span>            <span class="token comment">#f.write(log)</span>        <span class="token keyword">pass</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cu<span class="token punctuation">)</span></code></pre><h3 id="插入多行数据"><a href="#插入多行数据" class="headerlink" title="插入多行数据"></a>插入多行数据</h3><pre class="language-python" data-language="python"><code class="language-python">data_ToBeInserted <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"170140009,'凡','男',20,'人文'"</span><span class="token punctuation">,</span><span class="token string">"170140000,'翔','男',20,'GIS'"</span><span class="token punctuation">,</span><span class="token string">"170140001,'豪','男',20,'GIS'"</span><span class="token punctuation">,</span><span class="token string">"170140002,'飞','男',20,'人文'"</span><span class="token punctuation">,</span><span class="token string">"170100001,'亮','男',27,'海棠二楼'"</span><span class="token punctuation">]</span>sql_insert <span class="token operator">=</span> <span class="token string">"INSERT INTO Student VALUES"</span>   <span class="token comment">#SQL语句一</span>sql_values <span class="token operator">=</span> <span class="token string">""</span>     <span class="token comment">#SQL语句二</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>data_ToBeInserted<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment">#列表下标索引，一一提取一行数据</span>    sql_values <span class="token operator">+=</span> <span class="token string">'('</span>                       <span class="token comment">#增加execute语句所需的左括号</span>    sql_values <span class="token operator">+=</span> data_ToBeInserted<span class="token punctuation">[</span>i<span class="token punctuation">]</span>      <span class="token comment">#插入数据</span>    sql_values <span class="token operator">+=</span> <span class="token string">'),'</span>                      <span class="token comment">#右括号</span>sql_values <span class="token operator">=</span> sql_values<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>          <span class="token comment">#去除最后一行数据的逗号，也可replace为分号</span>sql_todo <span class="token operator">=</span> sql_insert <span class="token operator">+</span> sql_values</code></pre><h3 id="判断cursor的结果是否为空"><a href="#判断cursor的结果是否为空" class="headerlink" title="判断cursor的结果是否为空"></a>判断cursor的结果是否为空</h3><pre class="language-python" data-language="python"><code class="language-python">db <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"test/user.db"</span><span class="token punctuation">)</span>c<span class="token operator">=</span>db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cursor<span class="token operator">=</span>c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select info,flag,result from user  where info='XXX'"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>cursor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>]]></content>
    
    
    <summary type="html">SQL知识点
Mysql 10个字节相当于10个汉字

Python - SQLite
SQLite 语法
execute()   #执行sql语句
scroll()   #游标滚动
close()   #关闭游标
executemany()   #执行多条sql语句
fetchone()   #从结果中取一条记录
fetchmany()   #从结果中取多条记录
fetchall()   #从结果中取出多条记录

SQLite 基本操作
import sqlite3

conn = sqlite3.connect(&#39;test.db&#39;)      #如果数据库不存在，那么它就会被创建，最后将返</summary>
    
    
    
    <category term="技术笔记" scheme="http://localhost:4000/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS实用技巧</title>
    <link href="http://localhost:4000/posts/17812/"/>
    <id>http://localhost:4000/posts/17812/</id>
    <published>2021-06-04T12:45:44.000Z</published>
    <updated>2021-06-04T12:58:00.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="滚动固定-不随滚动条滚动而滚动"><a href="#滚动固定-不随滚动条滚动而滚动" class="headerlink" title="滚动固定,不随滚动条滚动而滚动"></a>滚动固定,不随滚动条滚动而滚动</h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token selector">.app</span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span> 12000px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 2600px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.box</span><span class="token punctuation">{</span>      <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #ff001c<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></code></pre>]]></content>
    
    
    <summary type="html">滚动固定,不随滚动条滚动而滚动
&lt;head&gt;
  &lt;style&gt;
    .app{
      width: 12000px;
      height: 2600px;
    }
    .box{
      position: sticky;
      top: 10px;
      width: 50px;
      height: 50px;
      background: #ff001c;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class=&quot;app&quot;&gt;
  &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://localhost:4000/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo笔记及过程记录</title>
    <link href="http://localhost:4000/posts/54465/"/>
    <id>http://localhost:4000/posts/54465/</id>
    <published>2021-05-28T15:30:01.000Z</published>
    <updated>2021-06-16T15:34:04.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目前已安装插件"><a href="#目前已安装插件" class="headerlink" title="目前已安装插件"></a>目前已安装插件</h2><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="代码高亮的方法"><a href="#代码高亮的方法" class="headerlink" title="代码高亮的方法"></a>代码高亮的方法</h2><p>PS：寻找一些好看的博客网站代码样式文件，直接copy过来（简单且粗暴）</p><h2 id="Hexo一些常用命令"><a href="#Hexo一些常用命令" class="headerlink" title="Hexo一些常用命令"></a>Hexo一些常用命令</h2><pre class="language-cmd" data-language="cmd"><code class="language-cmd">hexo init [folder]  #新建一篇文章hexo generate   #生成静态页面hexo server   #启动服务器hexo deploy     #部署网站hexo clean      #清除缓存文件hexo --draft    #显示 source/_drafts 文件夹中的草稿文章hexo new page name  #新建一个自定义页面</code></pre><h2 id="Hexo-分类，归档，标签页面知识点"><a href="#Hexo-分类，归档，标签页面知识点" class="headerlink" title="Hexo 分类，归档，标签页面知识点"></a>Hexo 分类，归档，标签页面知识点</h2><ul><li>分类页page.esj</li><li>归档页archive.ejs</li><li>标签页tags.ejs</li></ul><p>输出分类目录标题</p><pre class="language-html" data-language="html"><code class="language-html">&lt;% site.categories.map(function(category){  %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&lt;%= category.name %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>&lt;% }) %&gt;</code></pre><p>输出分类文章标题</p><pre class="language-html" data-language="html"><code class="language-html">&lt;% site.categories.map(function(category){  %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&lt;%= category.name %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    &lt;% category.posts.map(function(post){  %&gt;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>&lt;%= post.name %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>    &lt;% }) %&gt;&lt;% }) %&gt;</code></pre><h2 id="Hexo-文章中插入图片的方法"><a href="#Hexo-文章中插入图片的方法" class="headerlink" title="Hexo 文章中插入图片的方法"></a>Hexo 文章中插入图片的方法</h2><p>一般用CDN，但考虑到我们内容并不多，所以我选择和文章放在一起。安装插件hexo-asset-image，把配置文件post_asset_folder改为true，这样新建文章的时候会在同目录下有个同名文件夹，把图片放到文件夹里面。使用以下命令来插入图片。</p><p>1.安装插件</p><pre class="language-html" data-language="html"><code class="language-html">npm install hexo-asset-image --save</code></pre><p>2.修改配置文件_config.yml</p><blockquote><p>找到 post_asset_folder，把这个选项从false改成true</p></blockquote><p>3.生成文章</p><pre class="language-python" data-language="python"><code class="language-python">hexo new Hello  <span class="token comment">#发现文章同文件夹里多出给同文章名的文件夹，把图片放到里面去引用就行了</span></code></pre><p>4.找到插件内的index.js文件替换内容</p><pre class="language-none"><code class="language-none">/node_modules/hexo-asset-image/index.js</code></pre><pre class="language-java" data-language="java"><code class="language-java"><span class="token string">'use strict'</span><span class="token punctuation">;</span><span class="token keyword">var</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cheerio'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span>function <span class="token function">getPosition</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> m<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> version <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>hexo<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'after_post_render'</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> config <span class="token operator">=</span> hexo<span class="token punctuation">.</span>config<span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>post_asset_folder<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> link <span class="token operator">=</span> data<span class="token punctuation">.</span>permalink<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>version<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Number</span><span class="token punctuation">(</span>version<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>       <span class="token keyword">var</span> beginPos <span class="token operator">=</span> <span class="token function">getPosition</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>       <span class="token keyword">var</span> beginPos <span class="token operator">=</span> <span class="token function">getPosition</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span>    <span class="token keyword">var</span> endPos <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    link <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>beginPos<span class="token punctuation">,</span> endPos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> toprocess <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'excerpt'</span><span class="token punctuation">,</span> <span class="token string">'more'</span><span class="token punctuation">,</span> <span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> toprocess<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">var</span> key <span class="token operator">=</span> toprocess<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        ignoreWhitespace<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        xmlMode<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        lowerCaseTags<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        decodeEntities<span class="token operator">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">// For windows style path, we replace '\' to '/'.</span>            <span class="token keyword">var</span> src <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">/</span>http<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">.</span>*<span class="token operator">|</span>\<span class="token operator">/</span>\<span class="token operator">/</span><span class="token punctuation">.</span>*<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>               <span class="token operator">!</span><span class="token operator">/</span><span class="token operator">^</span>\s<span class="token operator">*</span>\<span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment">// For "about" page, the first part of "src" can't be removed.</span>              <span class="token comment">// In addition, to support multi-level local directory.</span>              <span class="token keyword">var</span> linkArray <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> elem <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">var</span> srcArray <span class="token operator">=</span> src<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> elem <span class="token operator">!=</span> <span class="token string">''</span> <span class="token operator">&amp;&amp;</span> elem <span class="token operator">!=</span> <span class="token string">'.'</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>srcArray<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>                srcArray<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              src <span class="token operator">=</span> srcArray<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              $<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>root <span class="token operator">+</span> link <span class="token operator">+</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>              console<span class="token punctuation">.</span>info<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"update link as:--&gt;"</span><span class="token operator">+</span>config<span class="token punctuation">.</span>root <span class="token operator">+</span> link <span class="token operator">+</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            console<span class="token punctuation">.</span>info<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"no src attr, skipped..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span>info<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>5.引用文章图片</p><pre class="language-none"><code class="language-none">![这是代替图片的文字，随便写](head.jpeg)</code></pre>]]></content>
    
    
    <summary type="html">目前已安装插件

代码高亮的方法
PS：寻找一些好看的博客网站代码样式文件，直接copy过来（简单且粗暴）

Hexo一些常用命令
hexo init [folder]  #新建一篇文章
hexo generate   #生成静态页面
hexo server   #启动服务器
hexo deploy     #部署网站
hexo clean      #清除缓存文件
hexo --draft    #显示 source/_drafts 文件夹中的草稿文章
hexo new page name  #新建一个自定义页面

Hexo 分类，归档，标签页面知识点
 * 分类页page.esj
 * 归</summary>
    
    
    
    <category term="技术笔记" scheme="http://localhost:4000/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="博客" scheme="http://localhost:4000/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>糖醋排骨经验总结</title>
    <link href="http://localhost:4000/posts/12829/"/>
    <id>http://localhost:4000/posts/12829/</id>
    <published>2021-05-28T09:19:12.000Z</published>
    <updated>2021-06-01T05:04:33.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工作准备"><a href="#工作准备" class="headerlink" title="工作准备"></a>工作准备</h2><p>关于怎么把排骨弄熟，有很多方法，比如：</p><p>炸，宽油炸。但不能直接炸。洗干净腌制之后放宽油炸熟，或者焯水后炸，再或者调味上糊后炸。优点是口感好，上菜快，从生到熟也用不了多久。缺点是不亲民，大火宽油只能看看，在家里搞就是妈见打。</p><p>不能炸就煎。少放点油慢慢煎，能实现类似炸的效果。优点是省不少油。缺点是时间漫长，这一步只是为了煎熟的话下一步就费时间了，要熬很久，不然成菜及其费牙。一口一塞牙会极大影响用餐情绪。</p><p>本文采用 CC NONE 4.0 许可协议，著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>网址：imzy.ink<br>作者：Zsedczy<br>来源：糖醋排骨经验总结 – 墨泽<br>链接：<a href="https://blog.imzy.ink/tcpaigu/">https://blog.imzy.ink/tcpaigu/</a></p>]]></content>
    
    
    <summary type="html">工作准备
关于怎么把排骨弄熟，有很多方法，比如：

炸，宽油炸。但不能直接炸。洗干净腌制之后放宽油炸熟，或者焯水后炸，再或者调味上糊后炸。优点是口感好，上菜快，从生到熟也用不了多久。缺点是不亲民，大火宽油只能看看，在家里搞就是妈见打。

不能炸就煎。少放点油慢慢煎，能实现类似炸的效果。优点是省不少油。缺点是时间漫长，这一步只是为了煎熟的话下一步就费时间了，要熬很久，不然成菜及其费牙。一口一塞牙会极大影响用餐情绪。

本文采用 CC NONE 4.0 许可协议，著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
网址：imzy.ink
作者：Zsedczy
来源：糖醋排骨经验总</summary>
    
    
    
    <category term="有趣分享" scheme="http://localhost:4000/categories/%E6%9C%89%E8%B6%A3%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Hexo" scheme="http://localhost:4000/tags/Hexo/"/>
    
    <category term="Markdown" scheme="http://localhost:4000/tags/Markdown/"/>
    
  </entry>
  
</feed>
